version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      # Copying data in mongo_data, that has already been created by container in directory /data/db 
      - mongo_data:/data/db
  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    
  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # Overwrite dbsetting in app.setting.json file
      # Note here we have changed localhost to catalogdb, since docker file can read only from a container
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
      - catalogdb
    ports:
      # We will create other microservices as well, so have to port fwd to unique port
      - "8000:80"
    volumes:
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
  basket.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # Overwrite dbsetting in app.setting.json file
      # Note here we have changed localhost to basketdb, since docker file can read only from a container
      - "CacheSettings:ConnectionString= basketdb:6379"
    depends_on:
      - basketdb
    ports:
      - "8001:80"
   
